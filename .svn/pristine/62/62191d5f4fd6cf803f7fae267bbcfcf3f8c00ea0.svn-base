package kr.or.dduk.notice.controller;

import java.io.File;
import java.util.HashMap;
import java.util.List;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import kr.or.dduk.notice.service.NoticeService;
import kr.or.dduk.vo.NoticeVO;
import lombok.extern.slf4j.Slf4j;

//게시글 목록
@Slf4j
@RequestMapping("/notice")
@Controller
public class NoticeController {
	
	@Autowired
	NoticeService noticeService;
	@GetMapping("/list")
	public String list(Model model) throws Exception {
		
		  List<NoticeVO> list = noticeService.list();
		  model.addAttribute("list", list);
		  
		  return "notice/notice";
	}
	//글 작성 란
	@GetMapping("/write")
	public String write() {
		
		return "notice/write";
		
	}
    // 공지사항 작성 처리
    @PostMapping("/write/insertNotice")
    public String write(NoticeVO noticeVO,HttpServletRequest request, HttpServletResponse response) {
        /*
         * 1. 화면단에서 받은 데이터 가공
         * 2. SERVICE 호출 
         * 3. INSERT 됐는지 확인 
         */
    	//NoticeVO(noticeNo=null, empNo=test1, noticeTitle=카드 취소했는데 돈은 언제 들어오나요?, 
    	//noticeCont=<p>이것은 샘플 내용입니다.ㄴㅇㄹㄴ</p>, noticeDt=null, noticeViews=0, atchFileCd=null
    	//, RW=null, notification=[원무과, 치료사], file=org.springframewo..
    	log.info("insertNotice : " + noticeVO);
        
        NoticeVO vo = new NoticeVO();
//        vo.put("NOTICE_TITLE",request.getParameter("subject"));
        
        
        int result = noticeService.insetNotice(noticeVO);
//        int result = 1;
        if(result > 0) {
        	log.info("성공");
        	return "redirect:/notice/list";
        }else if(result <0 ){
        	log.info("실패");
        }
        
        return "redirect:/notice/write";
    }
    //게시글 상세보기
    @GetMapping("/detail")
    public String detail(String noticeNo,HttpServletRequest request, HttpServletResponse response, Model model){
    	
    	log.info("noticeVO :"+noticeNo);
    	
    	NoticeVO noticeVO = this.noticeService.detail(noticeNo);
    	
    	
    	model.addAttribute("noticeVO", noticeVO);
    	return "notice/detail";
    }
    //게시글 삭제
    @GetMapping("/delete")
    public String delete(String noticeNo) {
    	
    	this.noticeService.delete(noticeNo);
    	
    	return "redirect:/notice/list";
    }
    
    //게시글 수정
    @RequestMapping("/update")
    public String update(Model model,@RequestParam HashMap<String,Object> param) {
    	
    	String noticeNo = param.get("noticeNo").toString();
    	
    	NoticeVO noticeVO = this.noticeService.detail(noticeNo);
    	model.addAttribute("noticeVO", noticeVO);
    	
    	return "notice/update";
    }
	
    //게시글 수정 후 딴딴딴
    @PostMapping("/updateNotice")
    public String updatePost(NoticeVO noticeVO) throws Exception {
    	log.info("noticeNo >>>>>>>>>>>>>>" + noticeVO);
    	int result = noticeService.update(noticeVO);
    	
    	log.info("result >>>>>>>>>>>>>>" + result);
//    	return "redirect:/notice/list";
    	
    	 if(result > 0) {
         	log.info("성공!!!!!!!!!!!!!!!!!!!!!!!");
         	return "redirect:/notice/list";
         } else if(result <0 ){
         	log.info("실패");
         }
         
         return "redirect:/notice/update";
     }
    //이미지 넣기
    @PostMapping(value = "/image/upload")
	public ModelAndView image(MultipartHttpServletRequest request) throws Exception {
		
		ModelAndView mav = new ModelAndView("jsonView");

		MultipartFile uploadFile = request.getFile("upload");

		String originalFileName = uploadFile.getOriginalFilename();

		String ext = originalFileName.substring(originalFileName.indexOf("."));
		
		String newFileName = UUID.randomUUID() + ext;
		//웹에 경로
		String realPath = request.getSession().getServletContext().getRealPath("/");

		String savePath = realPath + "upload/" + newFileName;
  
		String uploadPath = "./upload/" + newFileName; 

		File file = new File(savePath);

		uploadFile.transferTo(file);

		mav.addObject("uploaded", true);
		mav.addObject("url", uploadPath);

		return mav;
	}

}
    
    	
    	
  


