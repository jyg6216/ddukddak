<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>

<style>
#calendar-container {
	width:900px;
	height:600px;
}
</style>

<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.10/index.global.min.js'></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<!-- sweetalert -->
<script src="/resources/fullcalendar-6.1.10/sweetalert2.min.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div id='calendar-container'>
    <div id='calendar'></div>
</div>

<script>
// 달력 자리 지정
const calendarEl = $('#calendar')[0];
// 현재 날짜 불러와서 문자 형태 맞추기
const date = new Date();
const year = date.getFullYear();

document.addEventListener('DOMContentLoaded', function() {
	// 달력 세부 설정
	const calendar = new FullCalendar.Calendar(calendarEl, {
		// 한국어 설정
		locale : 'ko',
		height: '600px',
		// 화면에 맞게 높이 재설정
		expandRows : true,
		// 이벤트가 오버되면 높이 제한 (+ 몇 개식으로 표현)
		dayMaxEvents: true,
		// 초기 로드 될때 보이는 캘린더 화면(기본 설정: 달)
		initialView : 'dayGridMonth',
		// 날짜를 선택하면 Day 캘린더나 Week 캘린더로 링크
		navLinks : false,
		// +more 표시 전 최대 이벤트 갯수, true는 셀 높이에 의해 결정
		dayMaxEvents: true,
		// 버튼 만들기
		customButtons : {
			calButton : {
				text : "캘린더",
				click : function() {
					calendar.refetchEvents();
				}
			}
		},
		// 해더에 표시할 툴바
		headerToolbar : {
			left : 'calButton prev,next',
			center : 'title',
			right : 'dayGridMonth'
		},
		
	});
	// 달력 띄우기
	calendar.render();
	
	// 달력 DB 로딩
	let listData = { year : year };
	
	$.ajax({
		url:"/reserve/schList",
		type:"post",
		data: listData,
		dataType: "JSON",
		async: false,
		beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
		},
		success : function(data, status, xhr){
			$.each(data, function(key, value){
				// DB에서 가져온 일정 리스트 배치
				dsNo = data[key].dsNo;
				start = data[key].dsStrDate;
				end = data[key].dsEndDate;
				content = data[key].dsCont;
				dbCate = data[key].dsCate; // if => color
					if(dbCate === '진료'){
						color = "#0ABAB5";
					}else if(dbCate === '수술'){
						color = "#cce6ff";
					}else if(dbCate === '검사'){
						color = "#d9ccff";
					}else if(dbCate === '연구'){
						color = "#DBF2F4";
					}else{
						color = "#ffcccc";
					}  
				isAllDay = data[key].dsAd; // if => allDay
				
				let eventData = {
				    start: start,
				    end: end,
				    title: content,
				    color: color,
				    allDay: isAllDay,
				    id : dsNo,
				    groupId : dbCate,
				};
				
				// month 달력에 이벤트 출력
				calendar.addEvent(eventData);
				calendar.render();
			});
			
		}, error : function(xhr, status, error){
		  Swal.fire({
			   	title: '데이터 로딩 실패',
			   	text: '새로고침 해주세요.',
			   	icon: 'error',
			   	confirmButtonColor: '#0ABAB5',
			   	confirmButtonText: '확인',
			})
			return;
	  }
	});
})


</script>