<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<style>
.aside-ams-patient{
	width: 196px;
	border-radius: 16px 0px 0px 16px;
	background: var(--bg-02, #DBF2F4);
	height: 56px;
	border-right: 4px solid var(--ci-01, #0ABAB5);
	margin-left: 4px;
	color: var(--ci-01, #0ABAB5);
}

.patient-detail {
	width: 892px;
	height: 100%;
	flex-shrink: 0;
}	
.patient-note {
	width: 360px;
}

.search{
	width: 292px;
	height: 48px;
}

.record-input{
	margin-bottom: -4px;
	width: 312px;
	height: 48px;
}

.dduk-vertical-line {
	height: 642px;
	margin-top: -18px;
	margin-left: 272px;
}

hr{
	margin: -8px 0 16px -16px;
	background: var(--border, #EBEFF0);
	height: 1px;
}

.record-content-fr {
	height: 343px;
}

.dduk-login-input {
	width: 288px;
	height: 40px;
	flex-shrink: 0;
}

.modal-content{
	width: 680px;
}

.modal-body {
	padding: 48px; 
}

.search-btn {
	margin-left:8px; 
	padding: 4px 14px; 
	border-radius: 12px; 
	height: 38px;
}

.search-btn:hover {
	background: var(--ci-01, #0ABAB5);
}

.form-check {
	display: flex;
    gap: 40px;
    padding: 8px 16px;
    margin-top: 8px;
    margin-left: 16px;
}

.dduk-row {
	gap: 16px;
}

.selected {
    background-color: #EDF8F9;
}

#injuryTbody {
	font-size: 12px;
}

#createPatientRecordBtn {
	background-color:transparent;
	position: absolute;
	top: 904px;
    left: 1780px;
}

#patientRecordBoard {
	height: 700px;
    overflow-y: scroll;
}

#searchPatientBtn {
	background-color: transparent;
    position: absolute;
    top: 906px;
    left: 510px;
}

.autocomplete {
	position: absolute;
}

.autocomplete > div.active {
  background: #e0e5f6;
  color: #000;
}

.autocomplete > div {
  background: #f1f3f499;
  padding: .2rem .6rem;
}

</style>
<script>
window.onload=function(){    
	let mySpace = document.getElementById("patientRecordBoard");    
	mySpace.scrollTop = mySpace.scrollHeight;
	};

$(document).ready(function() {
	 $('.aside-ams-patient').find('svg').find('path').attr('fill', '#0ABAB5');
	
	 var strPaName=( $('.paName').val()).substring(0,8);
	
	 $('.dduk-nav-li').mouseleave(
			function()	{
				 $('.aside-ams-patient').find('svg').find('path').attr('fill', '#0ABAB5');
			}	
		);
	 
	 $('#inner-tab1').click(function(){
		$('#diag-scroll').attr('style', 'display: block' );
		$('#Adm-scroll').attr('style', 'display: none');
		$('#inner-tab1').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
	 });
	 
	 $('#inner-tab2').click(function(){
		$('#diag-scroll').attr('style', 'display: none' );
		$('#Adm-scroll').attr('style', 'display: block');
		$('#inner-tab1').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
	 });
	 
	 $('#patientRecordBoard').scrollTop($('#patientRecordBoard')[0].scrollHeight);
	 
	 var today = new Date();

	 var year = today.getFullYear();
	 var month = ('0' + (today.getMonth() + 1)).slice(-2);
	 var day = ('0' + today.getDate()).slice(-2);

	 var dateString = year + '-' + month  + '-' + day;
	 
	 var hours = ('0' + today.getHours()).slice(-2); 
	 var minutes = ('0' + today.getMinutes()).slice(-2);
	 var seconds = ('0' + today.getSeconds()).slice(-2); 

	 var timeString = hours + ':' + minutes;
	 
	 let empName = $('#empName').data('empname');
	 let empDeptNm = $('#empDeptNm').data('empdeptnm');
	 let empJbpsNm = $('#empJbpsNm').data('empjbpsnm');
	 let profileNm = $('#profileNm').data('profilenm');
	 
	 
	 //신규 환자 입력
	 $(document).on("click", "#btnAddPatient",function(){
		 
		 $("#createPatient").find(":input[required]").each(function () {

		        if ($(this).val() === "") {
		            $(this).css("border", "2px solid red");
		            return
		        } else {
		            $(this).css("border", "");
		        }

		    });
		 
		 let createPatientFrm = $('#createPatient')[0];
		 
		 let formData= new FormData(createPatientFrm);
		 
		 
		 let data = {};
		 formData.forEach((value, key) => data[key] = value);
		

		$.ajax({
			url: "/common/patientCreatePost",
			type:"post",
			data: JSON.stringify(data),
			dataType:"json",
			contentType:"application/json;charset:UTF-8",
			beforeSend : function(xhr) {
				xhr.setRequestHeader("${_csrf.headerName}",
						"${_csrf.token}");
			}
		}).done((rst) => {
			console.log(rst);
			$(".modal-backdrop.show").attr('style', 'opacity: 0');
			$("#createPatientModal").modal("hide");
			
			let count = $("#patient-list-table tr").length;
			
			let paInfo = "";
					paInfo += '<tr class="tr-padding" data-paNo='+rst.paNo+'>';
					paInfo += '<td class="td-padding">'+(count)+'</td>';
					paInfo += '<td height="48px" class="td-padding">'+rst.paName+'</td>';
					paInfo += '<td class="td-padding">'+ formatResidentNumber(rst.paReg) +'</td>';
					paInfo += '</tr>';
			
			$("#patientTbody").append(paInfo);
			
		}).fail((xhr) => {
			console.log(xhr);
		})
		 
	 });
	 
	 
	 //진료기록 입력
	 $(document).on("click", "#createPatientRecordBtn", function() {
		 let paNo = $('#patientTbody').find('.selected').data('pano');
		 let empNo = $('#empNo').data('empno');
		 let pareCont = $('#pareCont').val();
		 
		 let data = {
			"paNo":paNo,
			"empNo":empNo,
			"pareCont":pareCont
		 };
		 
		 createPatientRecord(data)
	 });
	 
	 function createPatientRecord(data) {
		 $.ajax({
			 url: '/common/createPatientRecordPost',
				contentType:"application/json;charset:utf-8",
				data:JSON.stringify(data),
				type: 'post',
				dataType: 'json',
				beforeSend:function(xhr){
					xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
				},
				success: function(rst){
					
					let str="";
					
					str += `
						<div>
							<div class="d-flex">
								<img class="record-profile-img" src="/resources/upload/\${profileNm}"/>
								<div>
									<div>\${empDeptNm} \${empName}</div>
									<div class="gray-text">\${dateString} \${timeString}</div>
								</div>
							</div>
							<div class="d-flex justify-content-end">
								<div class="patient-record-chat mar-t-8">
									\${rst.pareCont}
								</div>
							</div>
						</div>
						`;
					
					$("#patientRecordBoard").append(str);
					$('#pareCont').val("");
						
				},
				error: function(xhr, status, error){
					console.log('Error:', xhr, status, error);
				}
			 
		 });
		 
	 };
	 
	 
	 
	 //진료 클릭 이벤트
	 $(document).on("click", ".dduk-history-list", function() {
		 let clinicNo = $(this).data('clinicno');
		 console.log(clinicNo);
		 clinicDetail(clinicNo);
		 $(".dduk-history-list").removeClass("selected");
         // 현재 클릭한 요소에 select클래스 추가
         $(this).addClass("selected");
	 });
	 
	//진료 정보 가져오기
		function clinicDetail(clinicNo) {
			$.ajax({
				url:'/clinic/clinicChartDetail',
				dataType: 'json',
				type: 'post',
				data: {"clinicNo": clinicNo},
				beforeSend:function(xhr){
					xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
				},
				success: function(rst){
					
					$('.injnm').html("");					
					$('.opinion').html("");
					$('#injuryTbody').html("");
					
					$('.injnm').html(rst.clinicInjnm);					
					$('.opinion').html(rst.clinicOpinion);
					
					$.each(rst.injuryDiagnosisVOList, function(index){
						let clinicInjuryList ="";
						
						clinicInjuryList += "<tr><td>"+rst.injuryDiagnosisVOList[index].ijCd+"</td>";
						clinicInjuryList += "<td>"+rst.injuryDiagnosisVOList[index].injuryVO.ijNm+"</td>";
						clinicInjuryList += "<td>"+rst.injuryDiagnosisVOList[index].injuryBodyCd+"</td>";
						clinicInjuryList += "</tr>";
						
						$('#injuryTbody').append(clinicInjuryList);
					});
				},
				error: function(xhr, status, error){
					console.log('Error:', xhr, status, error);
				}
			});
		};
	 
	 
	// 환자 클릭시 이벤트
		$(document).on("click", ".tr-paInfo", function() {
			
			let paNo = $(this).data('pano');
			
			let data = {
				"paNo": paNo
			};
			
			console.log(paNo);
			simpleClinicChartList(paNo);
			patientRecordList(data);
			
			// 이전에 선택된 요소의 클래스 초기화
            $(".tr-paInfo").removeClass("selected");
            // 현재 클릭한 요소에 select클래스 추가
            $(this).addClass("selected");

		});
	
		
		// 환자의 환자 기록 출력
		function patientRecordList(data) {
			$.ajax({
				url: '/common/patientRecordList',
				contentType:"application/json;charset:utf-8",
				data:JSON.stringify(data),
				type: 'post',
				dataType: 'json',
				beforeSend:function(xhr){
					xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
				},
				success: function(rst){
					$("#patientRecordBoard").html("");
					
					let str="";
					
					$.each(rst, function(idx, patientRecordVO){
						str += `
							<div>
								<div class="d-flex">
									<img class="record-profile-img" src="/resources/upload/\${patientRecordVO.employeeVO.profileNm}"/>
									<div>
										<div>\${patientRecordVO.employeeVO.empDeptNm} \${patientRecordVO.employeeVO.empName}</div>
										<div class="gray-text">\${patientRecordVO.pareEndt}</div>
									</div>
								</div>
								<div class="d-flex justify-content-end">
									<div class="patient-record-chat mar-t-8">
										\${patientRecordVO.pareCont}
									</div>
								</div>
							</div>
							`;
							
					});
					
					$("#patientRecordBoard").html(str);
						
				},
				error: function(xhr, status, error){
					console.log('Error:', xhr, status, error);
				}
			})
		}
	
		// 환자의 진료목록 갱신
		function simpleClinicChartList(paNo){
			$.ajax({
				url: '/clinic/simpleClinicChartList',
				dataType: 'json',
				type: 'post',
				data: {"paNo": paNo},
				beforeSend:function(xhr){
					xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
				},
				success: function(rst){
					
					console.log("rst", rst);
					
					// 환자 정보 출력
					let paBirthDay = formatResidentNumber(rst.paReg);
					let paAge = getAge(paBirthDay);
					$('#paName').html(rst.paName);
					$('#paInfo').html(rst.paSex + ", "+paAge+"세("+paBirthDay+")");
					$('#paHeight').html(rst.paHeight + "cm");
					$('#paWeight').html(rst.paWeight + "kg");
					$('#paBldType').html(rst.paBldType + "형");
					
					// 진료 이력 초기화
					$('.history-scroll').html("");
					
					// 진료 이력이 없을시 없다는 메시지 출력
					if(rst.clinicChartVOList[0].clinicNo == null){
						$('#diag-scroll').append('<div class="notice-text">진료 이력이 없습니다</div>');
					} else {
						
						// 진료 이력이 있을시 화면에 출력
						$.each(rst.clinicChartVOList, function(index){
							// 진료일자
							let clinicDate = formatDateString(rst.clinicChartVOList[index].clinicDt);
						
							let paClinicList = "";
						
							paClinicList += '<div class="dduk-history-list" data-clinicNo='+rst.clinicChartVOList[index].clinicNo+'>';
							paClinicList += '<div class="history-array">';
							paClinicList += '<div>';
							paClinicList += '<div class="history-title">내원·'+clinicDate+'</div>';
							paClinicList += '<div>담당의 '+ rst.clinicChartVOList[index].empName+'</div>';
							paClinicList += '</div>';
							paClinicList += '</div>';
							paClinicList += '<div class="d-flex history-btn-list">';
							paClinicList += '<span class="history-btn">진료</span>';
							// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
							if(rst.clinicChartVOList[index].testOrderVOList[0].testCd != null){
								paClinicList += '<span class="history-btn">검사</span>';
							}
							// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
							if(rst.clinicChartVOList[index].treatmentOrderVOList[0].tmCd != null){
								paClinicList += '<span class="history-btn">치료</span>';
							}
							// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
							if(rst.clinicChartVOList[index].medicineOrderVOList[0].mediCd != null){
								paClinicList += '<span class="history-btn">처방</span>';
							}
							paClinicList += '</div>';
							paClinicList += '</div>';
						
							$('#diag-scroll').append(paClinicList);
						});
					
					}
				},
				error: function(xhr, status, error){
					console.log('Error:', xhr, status, error);
				}
			});
		}
		
		
	$(document).on("click", "#searchPatientBtn", function() {
		let paName = $('#searchPatient').val();
		console.log(paName);
		
		let data = {
			"paName":paName	
		};
		
		searchPatient(data);
	});
	
	
	function searchPatient(data){
		$.ajax({
			url: '/common/searchPatient',
			contentType:"application/json;charset:utf-8",
			dataType: 'json',
			type: 'post',
			data: JSON.stringify(data),
			beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				
				$('#patientTbody').html("");
				
				let str ="";
				
				
				
				$.each(rst, function(idx){
					let paName = truncateText(rst[idx].paName, 7);
					
					let paReg = formatResidentNumber(rst[idx].paReg);
					
					console.log(paName, paReg);
					
					str += `
						<tr class="tr-padding tr-paInfo" data-paNo="\${rst[idx].paNo}">
						<td class="td-padding">
							\${idx+1}
						</td>
						<td height="48px" class="td-padding">
							\${paName}
						</td>
						<td class="td-padding">
							\${paReg}
						</td>
					</tr>
					`;
					
				});
				
				$('#patientTbody').append(str);
				
			}
		});
	}
		
});

// 이름 등이 글자를 제어하고 싶을 때 maxLength까지만 표시
function truncateText(text, maxLength) {
	if (text.length > maxLength) {
		return text.slice(0, maxLength) + '...';
	} else {
	    return text;
	}
}

//주민번호로 만나이 계산
function getAge(paBirthDay) {
	
	// 현재날짜, 생일로 날짜계산
    const currentDate = new Date();
    const birthdateDate = new Date(paBirthDay);
    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

    // 현재와 생일의 월, 날짜 얻어주기
	const currentMonth = currentDate.getMonth();
	const birthdateMonth = birthdateDate.getMonth();
	const currentDay = currentDate.getDate();
	const birthdateDay = birthdateDate.getDate();

	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
   		age--;
	}
    return age;
}

// 주민번호를 생년월일로 변환
function formatResidentNumber(residentNumber) {
	
	// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
    let year = "";
    if(Number(residentNumber.substr(0,1)) <= 3){
    	year += "20";
    } else {
    	year += "19";
    }
    year += residentNumber.substr(0,2);
    
    
    let month = residentNumber.substr(2,2);
    let day = residentNumber.substr(4,2);
    
    let birthDay = year + "-" + month + "-" + day;
    return birthDay;
}

//날짜형식 데이터를 넣으면 yyyy-MM-dd(요일) 로 변환해주는 함수
function formatDateString(dateString) {
	// 요일먼저 얻기
	const week = ['일', '월', '화', '수', '목', '금', '토'];
	const dayOfWeek = week[new Date(dateString).getDay()];
	
	const dateData = new Date(dateString);
	let year = dateData.getFullYear();
	let month = dateData.getMonth(); 
	let date = dateData.getDate()
	
	let dateStr = `\${year}-\${month}-\${date}(\${dayOfWeek})`;
	
	return dateStr;
}

</script>
<html>
	<sec:authentication property="principal.employeeVO" var="empVO"/>
	<div id="empNo" style="display: none;" data-empno="${empVO.empNo}">
	</div>
	<div id="empName" style="display: none;" data-empname="${empVO.empName}">
	</div>
	<div id="empDeptNm" style="display: none;" data-empdeptnm="${empVO.empDeptNm}">
	</div>
	<div id="empJbpsNm" style="display: none;" data-empjbpsnm="${empVO.empJbpsNm}">
	</div>
	<div id="profileNm" style="display: none;" data-profilenm="${empVO.profileNm}">
	</div>
	
	<div class="dduk-body-border patient-list">
		<div>
			<div class="dduk-title-area">
				<h2>환자 목록</h2>
				<svg id="createPatientInput" type="button" data-bs-toggle="modal" data-bs-target="#createPatientModal"  xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
					<g clip-path="url(#clip0_142_1638)">
						<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"/>
					</g>
					<defs>
					<clipPath id="clip0_142_1638">
						<rect width="24" height="24" fill="white"/>
					</clipPath>
					</defs>
				</svg>
			</div>
			<div class="dduk-x-pd8">
				<table class="patient-list-table" id="patient-list-table">
					<thead>
						<tr class="tr-padding">
							<th class="td-padding gray-text" style="width:40px;">No</th>
							<th class="td-padding gray-text paName" style="width:120px;">이름</th>
							<th class="td-padding gray-text">생년월일</th>
						</tr>
					</thead>
					
					<tbody id="patientTbody">
						<c:forEach var="patient" items="${patientVOList}" varStatus="status">
							<tr class="tr-padding tr-paInfo" data-paNo="${patient.paNo}">
								<td class="td-padding">
									${status.count}
								</td>
								<td height="48px" class="td-padding">
									<c:choose>
								        <c:when test="${fn:length(patient.paName) gt 9}">
								        <c:out value="${fn:substring(patient.paName, 0, 7)}">
								        </c:out>...</c:when>
								        <c:otherwise>
								        <c:out value="${patient.paName}">
								        </c:out></c:otherwise>
									</c:choose>
								</td>
								<td class="td-padding">
									<c:choose>
								        <c:when test="${fn:substring(patient.paReg, 0, 1) gt 0}">
								        19<c:out value="${fn:substring(patient.paReg, 0, 2)}">
								        </c:out></c:when>
								        <c:otherwise>
								        20<c:out value="${fn:substring(patient.paReg, 0, 2)}">
								        </c:out></c:otherwise>
									</c:choose>
									-${fn:substring(patient.paReg, 2, 4)}-${fn:substring(patient.paReg, 4, 6)}
								</td>
							</tr>
						</c:forEach>
					</tbody>
				</table>
			</div>	
		</div>
		<input id="searchPatient" class="search dduck-input" placeholder="환자 이름을 검색해주세요">
		<button id="searchPatientBtn"><img src="/resources/images/Search.png"></button>
		<div class="autocomplete"></div>
	</div>
	
	<div class="dduk-body-border patient-detail"  style="position: relative;">
		<div class="dduk-title-area">
			<div class="d-flex align-items-center">
				<h2  id="paName">환자를 선택해주세요</h2>
				<span id="paInfo" class="gray-text mar-b-8 mar-l-8"></span>
			</div>
			<div class="d-flex">
				<div class="d-flex patient-info" style="margin-left:-5%; margin-right:5%">
					<div class="d-flex">
						<span class="gray-text">신장&nbsp;&nbsp;</span><div id="paHeight">--</div>
					</div>
					<div class="d-flex">
						<span class="gray-text">체중&nbsp;&nbsp;</span><div id="paWeight">--</div>
					</div>
					<div class="d-flex">
						<span class="gray-text">혈액형&nbsp;&nbsp;</span><div id="paBldType">--</div>
					</div>
				</div>
				<button class="dduk-btn-normal">상세보기</button>
			</div>
		</div>
		<hr style="width: 892px;">
		<div class="d-flex">
			<div class="dduk-history">
				<div style="height: 520px;">
					<div class="subTitle-margin">
						<div class="dduk-row spa-betw">
							<div class="inner-tab" id="inner-tab1" style="border-bottom: 3px solid var(--ci-01, #0ABAB5);">
								<h3>진료 이력</h3>
							</div>
							<div class="inner-tab" id="inner-tab2">
								<h3>입원 이력</h3>
							</div>
						</div>
					</div>
					
					<div class="history-scroll" id="diag-scroll">
					</div>
					
					<div class="history-scroll" id="Adm-scroll" style="display: none;">
					</div>
					
				</div>
				<hr style="width: 289px;">
				<div style="height: 239px;">
					<div class="spa-betw">
						<div class="subTitle-margin">
							<h3>문서 발급</h3>
						</div>
						<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
							<g clip-path="url(#clip0_142_1806)">
							<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"/>
							</g>
							<defs>
							<clipPath id="clip0_142_1806">
							<rect width="24" height="24" fill="white"/>
							</clipPath>
							</defs>
						</svg>
					</div>
					<div class="gap-ver-16 p-8">
						<div class="spa-betw"><span class="text16">진단서</span><button class="dduk-btn-normal">발급하기</button></div>
						<div class="spa-betw"><span class="text16">소견서</span><button class="dduk-btn-disabled">발급완료</button></div>
						<div class="spa-betw"><span class="text16">처방전</span><button class="dduk-btn-danger">발급불가</button></div>
					</div>
				</div>
			</div>
			<div class="patient-record">
				<div class="subTitle-margin">
					<h3>진료 기록</h3>
				</div>
				<div class="gap-ver-16">
					<div class="gap-row-16 w-100">
						<div class="dduk-inner-border record-content-fr" style="width:284px;">
							<h3 class="m-8">진료 내용</h3>
							<div>
								<div class="m-16">
									<p>진단명</p>
									<span class="injnm  mar-b-8"></span>
								</div>
								<div class="m-16 mar-b-8">
									<p>소견</p>
									<div class="opinion  mar-b-8"></div>
								</div>
								<div class="m-16">
									<p>상병</p>
									<div>
										<table class="w-100">
											<thead>
												<tr>
													<td>코드</td>
													<td>상병명</td>
													<td>환부</td>
												</tr>
											</thead>
											<tbody id="injuryTbody">
											
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>
						<div class="dduk-inner-border record-content-fr" style="width:272px; z-index: auto;">
							<h3 class="m-8">이미지</h3>
							<div class="record-img-scroll">
									<img class="record-img" src="/resources/images/images1.png"/>
									<img class="record-img" src="/resources/images/images1.png"/>
									<img class="record-img" src="/resources/images/images1.png"/>
									<img class="record-img" src="/resources/images/images1.png"/>
									<img class="record-img" src="/resources/images/images1.png"/>
									<img class="record-img" src="/resources/images/images1.png"/>
							</div>
						</div>
					</div>
					<div class="dduk-inner-border w-100" style="height: 320px;">
						<h3>오더 내역 </h3>
					</div>
				</div>
			</div>
		</div>
		
	</div>
	
	<div class="dduk-body-border patient-note">
		<div class="subTitle-margin mar-b-8">
			<h3>환자 기록</h3>
		</div>
		<div class="spa-betw flex-d-col" style="height: 760px;">
			<div class="gap-ver-32 w-100 p-8" id="patientRecordBoard">
				<div>
					<div class="d-flex">
						<img class="record-profile-img" src="/resources/images/Ellipse12.png"/>
						<div>
							<div>원무과 김한나</div>
							<div class="gray-text">2023-11-21(화) 12:33:42</div>
						</div>
					</div>
					<div class="d-flex justify-content-end">
						<div class="patient-record-chat mar-t-8">
							상시 복용 약품 없음 확인.
						</div>
					</div>
				</div>
				<div>
					<div class="d-flex">
						<img class="record-profile-img" src="/resources/images/Ellipse14.png"/>
						<div>
							<div>의사 전영균</div>
							<div class="gray-text">2023-11-21(화) 16:55:16</div>
						</div>
					</div>
					<div class="d-flex justify-content-end">
						<div class="patient-record-chat mar-t-8">
							진단서 발급, <br/>
							금주 금요일에 예약 잡아주세요.
						</div>
					</div>
				</div>
				<div>
					<div class="d-flex">
						<img class="record-profile-img" src="/resources/images/Ellipse13.png"/>
						<div>
							<div>원무과 이수정</div>
							<div class="gray-text">2023-11-21(화) 16:55:16</div>
						</div>
					</div>
					<div class="d-flex justify-content-end">
						<div class="patient-record-chat mar-t-8">
							샤이니 콘서트 예약 바랍니다.
						</div>
					</div>
				</div>
			<hr style="width:360px; margin-left: -24px;">
			<div class="gray-text" style="margin-top: -44px; margin-left: 102px;">2023-11-2(수)</div>
			</div>
				<input class="record-input dduck-input" id="pareCont" name="pareCont" placeholder="환자 기록을 추가해주세요">
				<button id="createPatientRecordBtn"><img src="/resources/images/Arrowupward.png"></button>
		</div>
	</div>
	
	<!-- 	환자 추가 모달	 -->
	<c:import url="../common/modal.jsp"></c:import>
</html>