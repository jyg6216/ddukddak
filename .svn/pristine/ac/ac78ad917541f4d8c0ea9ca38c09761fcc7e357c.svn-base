<%@page import="com.fasterxml.jackson.databind.ObjectMapper"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"  %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<style>
/* 어사이드 강조 */
.aside-ams-receipt{
	width: 196px;
	border-radius: 16px 0px 0px 16px;
	background: var(--bg-02, #DBF2F4);
	height: 56px;
	border-right: 4px solid var(--ci-01, #0ABAB5);
	margin-left: 4px;
	color: var(--ci-01, #0ABAB5);
}
/* 접수 페이지 전용 시작 */
.inH2{
	margin-bottom: 45px;
}
.getPatientInfo{
	gap: 72px;
	margin: 0px 30px 0px 30px;
}
.patient-list{
	justify-content: normal;
	
}
.rcptCenter {
	height: 416px;
	width: 592px;
	margin-bottom: 8px;
}

.docOfcWrap {
	width: 660px;
}

.docOfc{
	height: 375px;	
	width: 300px;
	float: left;
	margin: 4px 2px 4px 2px;
}

.search{
	background-image: url(/resources/images/Search.png);
	background-repeat: no-repeat;
	background-position: 372px center;
	width: 412px;
	height: 48px;
	margin-left: 18px;
}
/* 자동 완성 창 */
.autocomplete{
	width: 400px;
	background-color: #F8F9FC;
	margin-left: 140px;
	position: absolute;
	top: 205px;
	visibility: hidden;
}

.autocomplete.active {
    visibility: visible;
}

/* 현재 선택된 검색어 */
.autocomplete > div.active {
  background: #e0e5f6;
  color: #000;
}

/* 검색 창 강조 색 */
mark {
  background-color: #DBF2F4; /* 원하는 색상으로 변경 가능 */
}
/* 접수 페이지 전용 끝 */

/* 환자 선택 시 강조 */
.selected {
    background-color: #EDF8F9;
}
</style>
<html>
<body>
	<div class="dduk-body-border patient-list">
		<div class="dduk-title-area">
			<h2>환자 목록</h2>
			<br/>
			<div class="dduk-row">
				<div class="inner-tab" id="inner-tab1" style="border-bottom: 3px solid var(--ci-01, #0ABAB5);">
					<h3>대기</h3>
				</div>
				<div class="inner-tab" id="inner-tab2">
					<h3>완료</h3>
				</div>
			</div>
		</div>
<!-- 		대기환자 테이블 -->
		<div class="dduk-x-pd8">
		<table class="waiting">
			<tr class="tr-padding">
				<th class="td-padding gray-text" style="width:40px;">No</th>
				<th class="td-padding gray-text paName" style="width:120px;">이름</th>
				<th class="td-padding gray-text">생년월일</th>
			</tr>
			<c:forEach var="patient" items="${waitingReceptionVOList}" varStatus="status">
				<tr class="tr-padding tr-paInfo" data-paNo="${patient.paNo}">
					<td class="td-padding">
						${status.count}
					</td>
					<td height="48px" class="td-padding">
						<c:choose>
					        <c:when test="${fn:length(patient.paName) gt 9}">
					        <c:out value="${fn:substring(patient.paName, 0, 7)}">
					        </c:out>...</c:when>
					        <c:otherwise>
					        <c:out value="${patient.paName}">
					        </c:out></c:otherwise>
						</c:choose>
					</td>
					<td class="td-padding">
						<c:choose>
					        <c:when test="${fn:substring(patient.paReg, 0, 1) gt 0}">
					        19<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:when>
					        <c:otherwise>
					        20<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:otherwise>
						</c:choose>
						-${fn:substring(patient.paReg, 2, 4)}-${fn:substring(patient.paReg, 4, 6)}
					</td>
				</tr>
			</c:forEach>
		</table>
		</div>
<!-- 		완료환자 테이블 -->
		<div class="dduk-x-pd8">
		<table class="complete">
			<tr class="tr-padding">
				<th class="td-padding gray-text" style="width:40px;">No</th>
				<th class="td-padding gray-text paName" style="width:120px;">이름</th>
				<th class="td-padding gray-text">생년월일</th>
			</tr>
			<c:forEach var="patient" items="${completeReceptionVOList}" varStatus="status">
				<tr class="tr-padding tr-paInfo" data-paNo="${patient.paNo}">
					<td class="td-padding">
						${status.count}
					</td>
					<td height="48px" class="td-padding">
						<c:choose>
					        <c:when test="${fn:length(patient.paName) gt 9}">
					        <c:out value="${fn:substring(patient.paName, 0, 7)}">
					        </c:out>...</c:when>
					        <c:otherwise>
					        <c:out value="${patient.paName}">
					        </c:out></c:otherwise>
						</c:choose>
					</td>
					<td class="td-padding">
						<c:choose>
					        <c:when test="${fn:substring(patient.paReg, 0, 1) gt 0}">
					        19<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:when>
					        <c:otherwise>
					        20<c:out value="${fn:substring(patient.paReg, 0, 2)}">
					        </c:out></c:otherwise>
						</c:choose>
						-${fn:substring(patient.paReg, 2, 4)}-${fn:substring(patient.paReg, 4, 6)}
					</td>
					<c:if test="${patient.hsrpState.equals('RCTY01')}">
					<td class="td-padding">대기중</td>
					</c:if>
					<c:if test="${patient.hsrpState.equals('RCTY02')}">
					<td class="td-padding">호출완료</td>
					</c:if>
				</tr>
			</c:forEach>
		</table>
		</div>
	</div>
	
	
	<div>
		<div class="dduk-inner-border rcptCenter">
			<div class="dduk-title-area">
				<h2>환자 정보 조회<input type="text" id="search" class="search dduck-input" placeholder="환자 이름을 검색해주세요" autocomplete="off"></h2>
			</div>
			<div class="autocomplete"></div>
				<div class="dduk-row getPatientInfo">
					<div style="width: 296px;">
						<h2 class="inH2" id="patientName">이름 : </h2>
						<h2 class="inH2" id="patientAge">나이 : </h2>
						<h2 class="inH2" id="patientPh">연락처 : </h2>
						<h2 class="inH2" id="patientAdd">주소 : </h2>
					</div>
					<div style="width: 296px;">
						<h2 class="inH2" id="patientSex">성별 : </h2>
						<h2 class="inH2" id="patientInsr">건강보험 : </h2>
						<button type="button" class="dduk-btn-active" id="btnAddReceipt" data-bs-toggle="modal" data-bs-target="#createReceiptModal"
						style="position: relative; left: 200px; top: 100px;">접수</button>
					</div>
				</div>
		</div>
		<div class="dduk-inner-border rcptCenter">
			<div class="dduk-title-area">
				<h2>오늘 예약 리스트</h2>
			</div>
			<div class="card-body table-responsive p-0" style="height: 250px;">
					<table class="table table-head-fixed text-nowrap">
						<thead>
							<tr>
								<th>ID</th>
								<th>User</th>
								<th>Date</th>
								<th>Status</th>
								<th>Reason</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>183</td>
								<td>김환자</td>
								<td>11-7-2014</td>
								<td><span class="tag tag-success">완치</span></td>
								<td>빨리빨리 다니세요.</td>
							</tr>
							<tr>
								<td>219</td>
								<td>저환자</td>
								<td>11-7-2014</td>
								<td><span class="tag tag-warning">Pending</span></td>
								<td>Bacon ipsum dolor sit</td>
							</tr>
							<tr>
								<td>657</td>
								<td>김영남</td>
								<td>11-7-2014</td>
								<td><span class="tag tag-primary">Approved</span></td>
								<td>Bacon ipsum dolor sit</td>
							</tr>
							<tr>
								<td>657</td>
								<td>크롱스뭐시기대위</td>
								<td>11-7-2014</td>
								<td><span class="tag tag-primary">Approved</span></td>
								<td>Bacon ipsum dolor sit</td>
							</tr>
						</tbody>
					</table>
				</div>
		</div>
	</div>
	
	<div class="dduk-body-border docOfcWrap"  style="position: relative;">
		<div class="dduk-title-area">
			<h2>진료실 현황</h2>
		</div>
		
		<div class="dduk-inner-border docOfc">
			<div>
				<h3>진료실 1</h3><p>담당의 :</p> 
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div>
				<h3>진료실 2</h3>
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div>
				<h3>진료실 3</h3>
			</div>
		</div>
		<div class="dduk-inner-border docOfc">
			<div>
				<h3>진료실 4</h3>
			</div>
		</div>
	</div>
	
	<!-- 모달 임포트 -->
	<c:import url="../common/modal.jsp"></c:import>
<%-- <script src="<c:url value="/resources/script/searchByChosung.js" />"></script> --%>
<script>
//주민번호를 생년월일로 변환
function formatResidentNumber(residentNumber) {
	
	// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
    let year = "";
    if(Number(residentNumber.substr(0,1)) <= 3){
    	year += "20";
    } else {
    	year += "19";
    }
    year += residentNumber.substr(0,2);
    
    
    let month = residentNumber.substr(2,2);
    let day = residentNumber.substr(4,2);
    
    let birthDay = year + "-" + month + "-" + day;
    return birthDay;
}

function getAge(paBirthDay) {
	
	// 현재날짜, 생일로 날짜계산
    const currentDate = new Date();
    const birthdateDate = new Date(paBirthDay);
    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

    // 현재와 생일의 월, 날짜 얻어주기
	const currentMonth = currentDate.getMonth();
	const birthdateMonth = birthdateDate.getMonth();
	const currentDay = currentDate.getDate();
	const birthdateDay = birthdateDate.getDate();

	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
   		age--;
	}
    return age;
}

// 검색결과를 저장하기 위한 변수
var dataList = [];

$(document).ready(function() {
	//자동 검색 불러오기
	$.ajax({
			url: "/ams/getPatientList",
			dataType: 'json',
			type: 'get',
			beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				$.each(rst, function(index,vo){
					let str = "";
					$.each(vo, function(index, column){
						if(index == 'paName'){
							str += (column);
						}
						if(index == 'paReg'){
							str += (column + ',');
						}
					})
					dataList.push(str);
				})
				updateResultTable(dataList, 100);
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
	});
	
	//검색 결과 클릭
	$(document).on('click', '.option', function(){
		// css를 이용해 검색결과 숨기기/보이기
		toggleTableSearch();
		
		// 주민등록번호만 가져오기
		let paReg = $(this).text().substring(0,14);
		
		$.ajax({
			url: "/ams/searchPatientByReg",
			contentType:"application/json;charset=utf-8",
			data:paReg,
			type: 'post',
			beforeSend:function(xhr){
			xhr.setRequestHeader("${_csrf.headerName}", "${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				//주민번호 => 생년월일
				let birthDay = formatResidentNumber(rst.paReg);
				console.log(birthDay);
				let age = getAge(birthDay);
				console.log(age);
				
				$("#patientName").html("이름 : ");
				$("#patientAge").html("나이 : ");
				$("#patientPh").html("연락처 : ");
				$("#patientAdd").html("주소 : ");
				$("#patientSex").html("성별 : ");
				$("#patientInsr").html("건강보험 : ");
				
				$("#patientName").append(rst.paName);
				$("#patientAge").append("만 " + age + "세");
				$("#patientPh").append(rst.paPh);
				$("#patientAdd").append(rst.paAdd1 + " " + rst.paAdd2);
				$("#patientSex").append(rst.paSex);
				$("#patientInsr").append(rst.paInsrYn);
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	});
	
	// css를 이용해 검색결과 숨기기/보이기
	$(document).on('click', '#search', toggleTableSearch);
	function toggleTableSearch(){
		
		// 만약 배열의 길이가 0이면(검색 결과가 없으면) 함수를 종료시켜서 미리보기가 안되도록 함
		if(dataList.length === 0){
			return;
		}
		
		let $result = $('.autocomplete');
		$result.toggleClass('active');
	}
	
	// 검색어 입력시
	$(document).on('keyup', '#search', function() {
		let value = $('#search').val().trim();
		console.log("입력값",value);
		let matchDataList = dataList.filter((label) => label.includes(value));
		console.log("필터",matchDataList);
		updateResultTable(matchDataList, []);
	});
	
	
	// 검색결과의 배열인 data를 이용해서 테이블로 만들어주는 함수
    // data에는 검색결과의 배열이 들어오고
    // width에는 내가 주고       싶은 각각의 td값의 width를 넣으면 된다
    function updateResultTable(data, width){
       $('.autocomplete').html('');
       let cont = "";
       
       // 우선 배열의 길이만큼 실행
       $.each(data, function(index, str){
    	   cont += "<tr class='option'>";
    	   
          // ,를 정규식으로 만들어줌
          let regex = new RegExp(',', 'g');
          // 배열의 한 요소에서 , 의 개수를 파악 후 그 개수만큼 반복
          let matches = str.match(regex);
          let repeat = matches.length+1;
          
          // 배열 안의 구문자(,)의 개수만큼 실행 = td(컬럼)의 개수
          for(let i = 0; i < repeat; i++){
             let value = str.split(',')[i];
             cont += "<td style='width:"+width+"'>"+value+"</td>"
          }
          
          cont += "</tr>"
       })
       
       $('.autocomplete').append(cont);
    }
	
	$('.aside-ams-receipt').find('svg').find('path').attr('fill', '#0ABAB5');
	
	
	 
	 var strPaName=( $('.paName').val()).substring(0,8);
	 
	 $('#inner-tab1').click(function(){
		$('.waiting').attr('style', 'display: block');
		$('.complete').attr('style', 'display: none');
		$('#Adm-scroll').attr('style', 'display: none');
		$('#inner-tab1').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
	 });
		 
	 $('#inner-tab2').click(function(){
		$('.complete').attr('style', 'display: block');
		$('.waiting').attr('style', 'display: none');
		$('#Adm-scroll').attr('style', 'display: block');
		$('#inner-tab1').attr('style', 'border-bottom: 0px solid var(--ci-01, #0ABAB5)' );
		$('#inner-tab2').attr('style', 'border-bottom: 3px solid var(--ci-01, #0ABAB5)' );
	 });
		 
	//환자 클릭시 이벤트
	$(document).on("click", ".tr-paInfo", function() {
		// 환자 번호 저장
		let paNo = $(this).data('pano');
		console.log(paNo);
		// 이전에 선택된 요소의 클래스 초기화
        $(".tr-paInfo").removeClass("selected");
        //현재 클릭한 요소에 select클래스 추가
        $(this).addClass("selected");
	});
	
	//환자  접수 추가
	$(document).on("click", "#btnAddPatient",function(){
		 
		 $("#createPatient").find(":input[required]").each(function () {

		        if ($(this).val() === "") {
		            $(this).css("border", "2px solid red");
		            return
		        } else {
		            $(this).css("border", "");
		        }

		    });
		 
		 
		 let createPatientFrm = $('#createPatient')[0];
		 
		 let formData= new FormData(createPatientFrm);
		 
		 
		 let data = {};
		 formData.forEach((value, key) => data[key] = value);
		
	
		$.ajax({
			url: "/common/patientCreatePost",
			type:"post",
			data: JSON.stringify(data),
			dataType:"json",
			contentType:"application/json;charset:UTF-8",
			beforeSend : function(xhr) {
				xhr.setRequestHeader("${_csrf.headerName}",
						"${_csrf.token}");
			}
		}).done((rst) => {
			console.log(rst);
			$(".modal-backdrop.show").attr('style', 'opacity: 0');
			$("#createPatientModal").modal("hide");
			
			let count = $("#patient-list-table tr").length;
			
			let paInfo = "";
					paInfo += '<tr class="tr-padding" data-paNo='+rst.paNo+'>';
					paInfo += '<td class="td-padding">'+(count)+'</td>';
					paInfo += '<td height="48px" class="td-padding">'+rst.paName+'</td>';
					paInfo += '<td class="td-padding">'+ formatResidentNumber(rst.paReg) +'</td>';
					paInfo += '</tr>';
			
			$("#patientTbody").append(paInfo);
			
		}).fail((xhr) => {
			console.log(xhr);
		})
	});
});
</script>
</body>
</html>