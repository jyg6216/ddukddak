<%@ page language="java" contentType="text/html; charset=UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core"%>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"  %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<style>

.chart1 {
	height: 100%;
	width: 20%;
}

.chart2 {
	height: 100%;
	width: 60%;
}

.chart3 {
	height: 48.5%;
	width: 100%;
}

.chart4 {
	margin-top: 6%;
	height: 48.5%;
	width: 100%;
}

.chart-wrap {
	height: 100%;
	width: 20%;
}

.div-info-top {
	margin-top: 10%;
	display:flex;
	justify-content: space-around;
	color: #F8F9FC;
}

.div-info {
	display:flex;
	justify-content: space-around;
}

.div-info:hover {
	background-color: #EDF8F9;
}

.div-info p {
	margin-top:3%;
	margin-bottom:3%;
}

.info1 {
	width: 40px;
}

.info2 {
	width: 120px;
}

.info3 {
	width: 100px;
}

.selected {
    background-color: #EDF8F9;
}

.myhr {
	width: 954px;
	height: 1px;
	flex-shrink: 0;
	background: #EBEFF0;
	margin-left: -24px;
}

.aside-ams-patient{
	width: 196px;
	border-radius: 16px 0px 0px 16px;
	background: var(--bg-02, #DBF2F4);
	height: 56px;
	border-right: 4px solid var(--ci-01, #0ABAB5);
	margin-left: 4px;
	color: var(--ci-01, #0ABAB5);
}

.patient-detail {
	width: 1206px;
	height: 100%;
	flex-shrink: 0;
}	
.patient-note {
	width: 360px;
}

.search{
	background-image: url(/resources/images/Search.png);
	background-repeat: no-repeat;
	background-position: 252px center;
	width: 292px;
	height: 48px;
}

.record-input{
	background-image: url(/resources/images/Arrowupward.png);
	background-repeat: no-repeat;
	background-position: 272px center;
	width: 312px;
	height: 48px;
}

.dduk-vertical-line {
	height: 642px;
	margin-top: -18px;
	margin-left: 272px;
}

hr{
	margin: -8px 0 16px -16px;
	background: var(--border, #EBEFF0);
	height: 1px;
}

.record-content-fr {
	height: 343px;
}

.notice-text {
	height: 100%;
    text-align: center;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    font-size: 1.7em;
}

.gap-ver-16 {
	height: 94.5%;
}

.record-content-fr {
	height: 100%;
	width: 284px; 
}

.btn-state {
	font-size: 10.9px;
    padding: 4px 8px;
    width: 100%;
}

.dduck-input {
	position: relative;
    z-index: 99;
}

.reason-box {
	width: 90%;
	height: 100px;
	resize: none;
}

.opinion-box {
	width: 90%;
	height: 150px;
	resize: none;
}

.injury-name-box {
	width: 90%;
	height: 50px;
	resize: none;
}

.d-flex {
	position: relative;
}

.tr-column {
	background: #F8F9FC;
}

.clinic-table {
	text-align: center;
	width: 100%;
}

.injury-list-table {
	text-align: center;
}

.td-padding-data {
	pading: 0px;
}

.record-scroll { 
	height: 680px;
	overflow-y: scroll;
	-ms-overflow-style: none; /* IE and Edge */
    scrollbar-width: none;
}

.record-scroll::-webkit-scrollbar {
	display: none;
}

.patient-record {
	width:914px;
}

.clinic-opinion-flex {
	display: flex;
	justify-content: space-around;
}

#keyword {
	width: 60%;
	margin-left: 20%; 
	margin-bottom: 4%;
} 

.orderset-head {
	height: 10%;
}

.orderset-body {
	height: 384px;
	overflow-y: scroll;
	border-radius: 24px;
    border: 1px solid var(--border, #E0E8E6);
    padding: 16px;
    background: var(--white, #FFF);
}

svg{
	cursor: pointer;
}

#ordersetType {
	margin-top: 20px;
}

</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" />
<input type="hidden" id="csrfToken" value="${_csrf.token}">
<div class="dduk-body-border patient-list">
		<div>
			<div class="dduk-title-area">
				<h2>대기환자 목록</h2>
			</div>
			<div class="dduk-x-pd8">
				<table class="patient-list-table" id="waitingQueue">
					<tr class="tr-padding">
						<th class="td-padding gray-text" style="width:40px;">No</th>
						<th class="td-padding gray-text paName" style="width:90px;">이름</th>
						<th class="td-padding gray-text" style="width:90px">생년월일</th>
						<th class="td-padding gray-text" style="text-align:center">상태</th>
					</tr>
				</table>
			</div>	
		</div>
	</div>
	
	<div class="dduk-body-border patient-detail"  style="position: relative;">
		<div class="dduk-title-area spa-betw">
			<div class="d-flex align-items-center">
				<h2 id="paName">환자를 선택해주세요</h2>
				<span id="paInfo" class="gray-text mar-b-8 mar-l-8"></span>
			</div>
				<div class="d-flex">
					<div class="d-flex patient-info" style="margin-left:-5%; margin-right:5%">
						<div class="d-flex">
							<span class="gray-text">신장&nbsp;&nbsp;</span><div id="paHeight">--</div>
						</div>
						<div class="d-flex">
							<span class="gray-text">체중&nbsp;&nbsp;</span><div id="paWeight">--</div>
						</div>
						<div class="d-flex">
							<span class="gray-text">혈액형&nbsp;&nbsp;</span><div id="paBldType">--</div>
						</div>
					</div>
					<button class="dduk-btn-normal">상세보기</button>
				</div>
		</div>
		<hr style="width: 892px;">
		<div class="d-flex">
			<div class="dduk-history">
				<div style="height: 90%">
					<div class="subTitle-margin">
						<h2>진료 이력</h2>
					</div>
					<div class="history-scroll">
						<!-- 환자 진료내역 들어오는곳 -->
						<div class="notice-text">환자를 선택해주세요</div>
					</div>
				</div>
			</div>
			<!-- 진료진행 -->
			<div class="patient-record" id="currentRecord">
				<div class="subTitle-margin">
					<h2>진료 기록</h2>
				</div>
				<div class="gap-ver-16">
					<div class="dduk-inner-border record-content-fr record-scroll w-100">
						<div class="clinic-opinion-flex w-100">				
						<div class="textarea-wrap w-100">
							<h3>내원사유</h3>
							<textarea class="dduck-input reason-box" readonly="readonly"></textarea>
							<h3>진단명</h3>
							<textarea class="dduck-input injury-name-box"></textarea>
							<br><br>
							<h3>소견</h3>
							<textarea class="dduck-input opinion-box"></textarea>
						</div>
						<div class="w-100 orderset-wrap">
							<div class="orderset-head d-flex">
								<h3>오더세트</h3>
								<svg id="createOrderset" type="button" data-bs-toggle="modal" data-bs-target="#createOrdersetModal" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
									<g clip-path="url(#clip0_142_1638)">
									<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"></path>
									</g>
									<defs>
									<clipPath id="clip0_142_1638">
									<rect width="24" height="24" fill="white"></rect>
									</clipPath>
									</defs>
								</svg>
								<input type="text" class="dduck-input" id="keyword" placeholder="검색">
							</div>
							<div class="orderset-body dduk-inner-border">
							
							</div>
						</div>
					</div>
						
						<br><br>
						<!-- 상병진단부분 -->
						<div class="d-flex">
							<h3>상병진단</h3>
							<svg id="s" type="button" data-bs-toggle="modal" data-bs-target="#createPatientModal"  xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
								<g clip-path="url(#clip0_142_1638)">
									<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"/>
								</g>
								<defs>
									<clipPath id="clip0_142_1638">
										<rect width="24" height="24" fill="white"/>
									</clipPath>
								</defs>
							</svg>
						</div>
						<table class="clinic-table injury-list-table">
							<tr class="tr-padding tr-column">
								<th class="td-padding gray-text" style="width:60px;">코드</th>
								<th class="td-padding gray-text" style="width:80px;">구분</th>
								<th class="td-padding gray-text" style="width:180px">한글명</th>
								<th class="td-padding gray-text">영문명</th>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
						</table>
						<br>
						<!-- 검사오더부분 -->
						<div class="d-flex">
							<h3>검사오더</h3>
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
								<g clip-path="url(#clip0_142_1638)">
								<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"></path>
								</g>
								<defs>
								<clipPath id="clip0_142_1638">
								<rect width="24" height="24" fill="white"></rect>
								</clipPath>
								</defs>
							</svg>
						</div>
						<table class="clinic-table injury-list-table">
							<tr class="tr-padding tr-column">
								<th class="td-padding gray-text" style="width:60px;">코드</th>
								<th class="td-padding gray-text" style="width:80px;">구분</th>
								<th class="td-padding gray-text" style="width:180px">한글명</th>
								<th class="td-padding gray-text">영문명</th>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
						</table>
						<br>
						<!-- 처방오더부분 -->
						<div class="d-flex">
							<h3>처방오더</h3>
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
								<g clip-path="url(#clip0_142_1638)">
								<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"></path>
								</g>
								<defs>
								<clipPath id="clip0_142_1638">
								<rect width="24" height="24" fill="white"></rect>
								</clipPath>
								</defs>
							</svg>
						</div>
						<table class="clinic-table injury-list-table">
							<tr class="tr-padding tr-column">
								<th class="td-padding gray-text" style="width:60px;">코드</th>
								<th class="td-padding gray-text" style="width:80px;">구분</th>
								<th class="td-padding gray-text" style="width:180px">한글명</th>
								<th class="td-padding gray-text">영문명</th>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
						</table>
						<br>
						<!-- 치료오더부분 -->
						<div class="d-flex">
							<h3>치료오더</h3>
							<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
								<g clip-path="url(#clip0_142_1638)">
								<path d="M18 13H13V18C13 18.55 12.55 19 12 19C11.45 19 11 18.55 11 18V13H6C5.45 13 5 12.55 5 12C5 11.45 5.45 11 6 11H11V6C11 5.45 11.45 5 12 5C12.55 5 13 5.45 13 6V11H18C18.55 11 19 11.45 19 12C19 12.55 18.55 13 18 13Z" fill="#8D9EA5"></path>
								</g>
								<defs>
								<clipPath id="clip0_142_1638">
								<rect width="24" height="24" fill="white"></rect>
								</clipPath>
								</defs>
							</svg>
						</div>
						<table class="clinic-table injury-list-table">
							<tr class="tr-padding tr-column">
								<th class="td-padding gray-text" style="width:60px;">코드</th>
								<th class="td-padding gray-text" style="width:80px;">구분</th>
								<th class="td-padding gray-text" style="width:180px">한글명</th>
								<th class="td-padding gray-text">영문명</th>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
							<tr class="tr-padding tr-data">
								<td class="td-padding-data gray-text" style="widtd:60px;">M0086</td>
								<td class="td-padding-data gray-text" style="widtd:80px;">구분</td>
								<td class="td-padding-data gray-text" style="widtd:180px">대퇴골두 무혈성 괴사</td>
								<td class="td-padding-data gray-text">avascular necrosis of tde femoral head</td>
							</tr>
						</table>
					</div>
				</div>
			</div>
			<!-- 진료진행 끝 -->
			<!-- 진료기록조회 -->
			<!-- id="pastRecord" -->
			<!-- 진료기록조회끝 -->
		</div>
		
	</div>
	
<!-- 오더세트 추가 모달 시작 -->
<div id="createOrdersetModal" class="modal fade" tabindex="-1" aria-hidden="true">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h1 class="modal-title">오더세트 추가</h1>
				<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
			</div>
			<div id="createOrdersetBody" class="modal-body">
				<form id="createPatient">
					<div class="login-form-content">
						<div class="dduk-row">
							<div class="dduk-login-d">
								<div class="login-input-label">오더세트 유형</div>
								<div role="group">
									<span> 
										<select id="ordersetType" name="ordersetType">
											<option data-type="orderset">오더세트</option>
											<option data-type="order">오더</option>
										</select>
									</span>
								</div>
							</div>
							<div class="dduk-login-d">
								<div class="login-input-label">이름</div>
								<input id="paName" name="paName" class="dduk-login-input" type="text" required />
							</div>
						</div>
					</div>
				</form>
			</div>

			<div class="modal-footer">
				<button type="button" id="btnAddPatient" class="dduk-btn-active">저장</button>
				<button type="button" class="dduk-btn-normal"
					data-bs-dismiss="modal">취소</button>
			</div>
		</div>
	</div>
</div>
<!-- 오더세트 추가 모달 끝 -->

<script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/jstree.min.js"></script>
<script>
$(function(){
	
	// 최초 1번 대기목록 갱신
	// 굳이 Ajax를 이용해 동적으로 추가하는 이유는 Websocket을 이용해 실시간으로 대기 환자 갱신을 위해
	loadReceptionList();

	
	// 대기환자 목록 갱신
	$(document).on("click", ".tr-paInfo", function() {
		
		let paNo = $(this).data('pano');
		
		// 환자의 진료를 시작할건지 물어본다(SweetAlert2)
		Swal.fire({
			title: '진료를 시작하시겠습니까???',
			icon: 'question',
			showCancelButton: true,
			confirmButtonColor: '#0ABAB5',
			cancelButtonColor: '#8D9EA5',
			confirmButtonText: '확인',
			cancelButtonText: '취소'
		}).then((result) => {
			// 확인버튼 클릭시
			if (result.isConfirmed) {
            	// 이전에 선택된 요소의 클래스 초기화
                $(".tr-paInfo").removeClass("selected");
                // 현재 클릭한 요소에 select클래스 추가
                $(this).addClass("selected");
                // 클릭한 환자의 진료목록 갱신
                simpleClinicChartList(paNo);
                // 최초 클릭시 진료진행
			}
		})
    });
	
	
	// 환자의 진료정보를 클릭할 시 이벤트(진료상세 출력)
	$(document).on("click", ".dduk-history-list", function(){
		
		let clinicNo = $(this).data("clinicno");
		
		// 이전에 선택된 요소의 클래스 초기화
        $(".dduk-history-list").removeClass("selected");
        // 현재 클릭한 요소에 select클래스 추가
        $(this).addClass("selected");
        // 클릭한 진료의 상세내역 가져오기
        clinicChartDetail(clinicNo);
	});
	
	
	// 환자 대기목록 갱신
	function loadReceptionList(){
		$.ajax({
			url: '/ams/getReceptionList',
			dataType: 'json',
			type: 'post',
			beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success: function(rst){
				
				console.log("rst", rst);
				
				$.each(rst, function(index){
					let paInfo = "";
					paInfo += '<tr class="tr-padding tr-paInfo" data-paNo='+rst[index].paNo+'>';
					paInfo += '<td class="td-padding">'+(index + 1)+'</td>';
					paInfo += '<td height="48px" class="td-padding">'+truncateText(rst[index].paName, 4)+'</td>';
					paInfo += '<td class="td-padding">'+ formatResidentNumber(rst[index].paReg) +'</td>';
					paInfo += '<th class="td-padding">';
					
					// 진료상태코드 가져오기
					let clinicState = rst[index].clinicState;
					
					if(clinicState == null){
						paInfo += '<button class="dduk-btn-disabled btn-state">대기중</button>';
					}
					if(clinicState == 'CRST01'){
						paInfo += '<button class="dduk-btn-info btn-state">진료중</button>';
					}
					if(clinicState == 'CRST02'){
						paInfo += '<button class="dduk-btn-normal btn-state">검사중</button>';
					}
					if(clinicState == 'CRST03'){
						paInfo += '<button class="dduk-btn-active btn-state">검사완료</button>';
					}
					
					paInfo += '</th>';
					paInfo += '</tr>';
					
					$('#waitingQueue').append(paInfo);
				});
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	}
	
	
	// 환자의 진료목록 갱신
	function simpleClinicChartList(paNo){
		$.ajax({
			url: '/clinic/simpleClinicChartList',
			dataType: 'json',
			type: 'post',
			data: {"paNo": paNo},
			beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success: function(rst){
				
				console.log("rst", rst);
				
				// 환자 정보 출력
				let paBirthDay = formatResidentNumber(rst.paReg);
				let paAge = getAge(paBirthDay);
				$('#paName').html(rst.paName);
				$('#paInfo').html(rst.paSex + ", "+paAge+"세("+paBirthDay+")");
				$('#paHeight').html(rst.paHeight + "cm");
				$('#paWeight').html(rst.paWeight + "kg");
				$('#paBldType').html(rst.paBldType + "형");
				
				// 진료 이력 초기화
				$('.history-scroll').html("");
				
				// 진료 이력이 없을시 없다는 메시지 출력
				if(rst.clinicChartVOList[0].clinicNo == null){
					$('.history-scroll').append('<div class="notice-text">진료 이력이 없습니다</div>');
				} else {
					
					// 진료 이력이 있을시 화면에 출력
					$.each(rst.clinicChartVOList, function(index){
						// 진료일자
						let clinicDate = formatDateString(rst.clinicChartVOList[index].clinicDt);
					
						let paClinicList = "";
					
						paClinicList += '<div class="dduk-history-list" data-clinicNo='+rst.clinicChartVOList[index].clinicNo+'>';
						paClinicList += '<div class="history-array">';
						paClinicList += '<div>';
						paClinicList += '<div class="history-title">내원·'+clinicDate+'</div>';
						paClinicList += '<div>담당의 '+ rst.clinicChartVOList[index].empName+'</div>';
						paClinicList += '</div>';
						paClinicList += '</div>';
						paClinicList += '<div class="d-flex history-btn-list">';
						paClinicList += '<span class="history-btn">진료</span>';
						// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
						if(rst.clinicChartVOList[index].testOrderVOList[0].testCd != null){
							paClinicList += '<span class="history-btn">검사</span>';
						}
						// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
						if(rst.clinicChartVOList[index].treatmentOrderVOList[0].tmCd != null){
							paClinicList += '<span class="history-btn">치료</span>';
						}
						// 진료정보의 첫번째 vo를 뒤져봤는데 의약품 정보가 없을 때(처방을 안받았을 때)					
						if(rst.clinicChartVOList[index].medicineOrderVOList[0].mediCd != null){
							paClinicList += '<span class="history-btn">처방</span>';
						}
						paClinicList += '</div>';
						paClinicList += '</div>';
					
						$('.history-scroll').append(paClinicList);
						
						// 내원사유 갱신
						reason-box
					});
				
				}
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	}
	
	
	// 진료의 상세내역 불러오기
	function clinicChartDetail(clinicNo){
		$.ajax({
			url: '/clinic/clinicChartDetail',
			dataType: 'json',
			type: 'post',
			data: {"clinicNo": clinicNo},
			beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
			success: function(rst){
				console.log(rst);
				
				$.each(rst, function(index, clinicChartVO){
					
				});
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		})
	}
	
	
	// 주민번호를 생년월일로 변환
	function formatResidentNumber(residentNumber) {
		
		// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
	    let year = "";
	    if(Number(residentNumber.substr(0,1)) <= 3){
	    	year += "20";
	    } else {
	    	year += "19";
	    }
	    year += residentNumber.substr(0,2);
	    
	    
	    let month = residentNumber.substr(2,2);
	    let day = residentNumber.substr(4,2);
	    
	    let birthDay = year + "-" + month + "-" + day;
	    return birthDay;
	}
	
	
	// 주민번호로 만나이 계산
	function getAge(paBirthDay) {
		
		// 현재날짜, 생일로 날짜계산
	    const currentDate = new Date();
	    const birthdateDate = new Date(paBirthDay);
	    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

	    // 현재와 생일의 월, 날짜 얻어주기
    	const currentMonth = currentDate.getMonth();
    	const birthdateMonth = birthdateDate.getMonth();
    	const currentDay = currentDate.getDate();
    	const birthdateDay = birthdateDate.getDate();

    	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
    	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
       		age--;
    	}

	    return age;
	}
	
	
	// 이름 등이 글자를 제어하고 싶을 때 maxLength까지만 표시
	function truncateText(text, maxLength) {
		if (text.length > maxLength) {
			return text.slice(0, maxLength) + '...';
		} else {
		    return text;
		}
	}
	
	
	// 날짜형식 데이터를 넣으면 yyyy-MM-dd(요일) 로 변환해주는 함수
	function formatDateString(dateString) {
		// 요일먼저 얻기
		const week = ['일', '월', '화', '수', '목', '금', '토'];
		const dayOfWeek = week[new Date(dateString).getDay()];
		
		const dateData = new Date(dateString);
		let year = dateData.getFullYear();
		let month = dateData.getMonth(); 
		let date = dateData.getDate()
		
		let dateStr = `\${year}-\${month}-\${date}(\${dayOfWeek})`;
		
		return dateStr;
	}
});
</script>


<!-- 트리뷰 함수 -->
<script>
$(function () {
    // 노드정보를 저장하기 위한 변수
    var data = [];

    // 페이지 로딩시 tree구조 화면에 랜더링
    renderTree();

 	// 트리구조를 비동기통신 방식으로 서버에서 받아온 후 설정해주는 함수
	function renderTree() {
        $.ajax({
            url: "/orderSet/getOrderSetList",
            contentType: "text/html; charset=UTF-8",
            dataType: "json",
            type: "post",
            beforeSend:function(xhr){
				xhr.setRequestHeader("${_csrf.headerName}","${_csrf.token}");
			},
            success: (res) => {
            	
            	console.log("renderTree()의 ajax의 return값 : ", res);
            	
                $.each(res, function (idx, chart) {
                	
                	// 트리뷰 한 줄에대한 정보를 tempObj에 저장
                    let tempObj = {
                        id: chart.orderSetCd,
                        parent: chart.orderSetParcd,
                        text: chart.orderSetNm,
                        osty: chart.orderSetType,
                        orderCode: chart.orderSetOrdcd,
                        type: "file"
                    };
                	
                    if (tempObj.orderCode == null){
                    	tempObj.orderCode = "";
                    }
                    
                    // 오더세트 타입이 오더세트 오더파일이면
                    if (tempObj.osty == "OSTY01") {
                        tempObj.type = "folder";
                    }
                    // 오더세트 타입이 상병진단이면
                    if (tempObj.osty == "OSTY02") {
                        tempObj.type = "injury";
                    }
                    // 오더세트 타입이 약처방이면
                    if (tempObj.osty == "OSTY03") {
                        tempObj.type = "medicine";
                    }
                    // 오더세트 타입이 주사면
                    if (tempObj.osty == "OSTY04") {
                        tempObj.type = "folder";
                    }
                    // 오더세트 타입이 검사면
                    if (tempObj.osty == "OSTY05") {
                        tempObj.type = "test";
                    }
                    // 오더세트 타입이 치료면
                    if (tempObj.osty == "OSTY06") {
                        tempObj.type = "treatment";
                    }
                    
                   	// 이렇게 설정된 노드1개의 정보를 위에서 선언한 data배열에 추가
                    data.push(tempObj);
                });
                
            	console.log(data);
            	
                // 위에서 설정된 data를 이용해 트리구조 생성
                $(".orderset-body").jstree({
                    core: {
                        data: data,
                        check_callback: true
                    },
                    plugins : ["dnd", "search", "types", "checkbox"],
                    types : {
                        'folder' : {
                        	"checkbox" : false,
                            "icon" : "/resources/images/icons/icon-folder.png"
                        },
                        'file' : {
                            "icon" : "/resources/images/icons/icon-file.png",
                        },
                        'injury' : {
                            "icon" : "/resources/images/icons/icon-injury.png",
                        },
                        'medicine' : {
                            "icon" : "/resources/images/icons/icon-medicine.png",
                        },
                        'treatment' : {
                            "icon" : "/resources/images/icons/icon-treatment.png",
                        },
                        'test' : {
                            "icon" : "/resources/images/icons/icon-test.png",
                        },
                        default: {
                            "icon": "/resources/images/icons/icon-file.png"
                        }
                    }
                });
            },
            error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
        });
    }
 	
 	
 	// 오더세트 추가 버튼 누를 시 모달창 띄우기
	$('#createOrderset').on('click', function () {
        $('#createOrdersetModal').modal('show');
        
    });
 	
 	// 오더세트 추가 모달에서 오더세트 유형 변경 시 실행되는 함수(오더세튼지 오더인지에 따라 받는값이 다름)
	$(document).on('change', '#ordersetType', function(){
    	
		// 오더세트 클릭시
		if($("#ordersetType option:selected").data("type") == 'orderset'){
		}
		
		// 오더 클릭시
		// + 오더분류
		// + 오더이름
		// + 상위 오더세트 이렇게 3개 추가해서 아래에 html시켜주면됨
		if($("#ordersetType option:selected").data("type") == 'order'){
		}
    });
});
</script>