<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags"  %>
<%@ taglib prefix="fn" uri="http://java.sun.com/jsp/jstl/functions"%>
<style>
/* 어사이드 강조 */
.aside-ams-admiss{
	width: 196px;
	border-radius: 16px 0px 0px 16px;
	background: var(--bg-02, #DBF2F4);
	height: 56px;
	border-right: 4px solid var(--ci-01, #0ABAB5);
	margin-left: 4px;
	color: var(--ci-01, #0ABAB5);
}
.search{
	background-image: url(/resources/images/Search.png);
	background-repeat: no-repeat;
	background-position: calc(100% - 10px) center;
	width: 300px;
	height: 48px;
	margin-left: 18px;
}
.subTitle-margin{
	height: 50%;
	margin: -16px;
    padding: 24px;
}
hr {
    margin: 0;
    width: 100%; /* 부모 요소에 맞게 너비를 조절합니다 */
}

.dduk-history {
	height: 765px;
    margin: 0px -16px -16px -16px;
}

.dduk-title-area {
	margin: -16px -16px 0px -16px;
    padding: 16px 24px 8px 24px;
    border-bottom: 1px solid #EBEFF0;
}

tr.selected {
    background-color: #DBF2F4;
}

.patient-record{
	height: 765px;
	width: 350px;
    margin: 0px -16px -16px -16px;
}

.admission-room-detail{
	width: 860px;
	height: 840px;
}

.room-tab {
    background-color: transparent;
    border: none;
    cursor: pointer;
    padding: 8px 12px;
    margin-right: 8px;
    color: #8D9EA5;
}

.room-tab.selected {
    background-color: white;
    color: black;
}
/* 모달 스타일 */
.modal {
  display: none;
  position: fixed;
  z-index: 1;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: auto;
  background-color: rgba(0, 0, 0, 0.7);
}

.modal-content {
  background-color: #fefefe;
  margin: 15% auto;
  padding: 20px;
  border: 1px solid #888;
  width: 80%;
}

.close {
  color: #aaa;
  float: right;
  font-size: 28px;
  font-weight: bold;
}

.close:hover,
.close:focus {
  color: black;
  text-decoration: none;
  cursor: pointer;
}
</style>
<meta id="_csrf" name="_csrf" content="${_csrf.token}" />
<meta id="_csrf_header" name="_csrf_header"	content="${_csrf.headerName}" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
<script>
$(document).ready(function() {
	
	$('.aside-ams-admiss').find('svg').find('path').attr('fill', '#0ABAB5');
	
	var header = $("meta[name='_csrf_header']").attr("content");
	var token = $("meta[name='_csrf']").attr("content");
	
	selectAdmissionList();
	selectDischargeList()
	
	//입원대기 환자 출력
	function selectAdmissionList(){
		$.ajax({
			url: '/ams/selectAdmissionList',
			type: 'post',
			dataType: 'json',
			beforeSend:function(xhr){
				xhr.setRequestHeader(header,token);
			},
			success: function(result){
				
				console.log("환자 대기목록VO List", result);
				
				$.each(result, function(i){
					let str = "";
					str += '<tr class="tr-padding tr-paInfo" data-paNo="' + result[i].paNo + '">';
					str += '<td class="td-padding">'+(i + 1)+'</td>';
					str += '<td height="48px" class="td-padding">'+ result[i].paNo +'</td>';
					str += '<td height="48px" class="td-padding">'+ truncateText(result[i].paName) +'</td>';
					str += '<td class="td-padding">'+ formatResidentNumber(result[i].paReg) +'</td>';
					str += '<th class="td-padding">';
					str += '</th>';
					str += '</tr>';
					
					$('#admiss-list-table').append(str);
				});
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	}
	
	//퇴원대기 환자 출력
	function selectDischargeList(){
		$.ajax({
			url: '/ams/selectDischargeList',
			type: 'post',
			dataType: 'json',
			beforeSend:function(xhr){
				xhr.setRequestHeader(header,token);
			},
			success: function(result){
				
				console.log("환자 대기목록VO List", result);
				
				$.each(result, function(i){
					let str = "";
					str += '<tr class="tr-padding tr-paInfo" data-paNo="'+result[i].paNo+'">';
					str += '<td class="td-padding">'+(i + 1)+'</td>';
					str += '<td height="48px" class="td-padding">'+ result[i].paNo +'</td>';
					str += '<td height="48px" class="td-padding">'+ truncateText(result[i].paName) +'</td>';
					str += '<td class="td-padding">'+ formatResidentNumber(result[i].paReg) +'</td>';
					str += '<th class="td-padding">';
					str += '</th>';
					str += '</tr>';
					
					$('#discharge-list-table').append(str);
				});
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
	}
	
	// 이름 등이 글자를 제어하고 싶을 때 maxLength까지만 표시
	function truncateText(text, maxLength) {
		if (text.length > maxLength) {
			return text.slice(0, maxLength) + '...';
		} else {
		    return text;
		}
	}
	
	// 날짜형식 데이터를 넣으면 yyyy-MM-dd(요일) 로 변환해주는 함수
	function formatDateString(dateString) {
		// 요일먼저 얻기
		const week = ['일', '월', '화', '수', '목', '금', '토'];
		const dayOfWeek = week[new Date(dateString).getDay()];
		
		const dateData = new Date(dateString);
		let year = dateData.getFullYear();
		let month = dateData.getMonth(); 
		let date = dateData.getDate()
		
		let dateStr = `\${year}-\${month}-\${date}(\${dayOfWeek})`;
		
		return dateStr;
	}
	
	// 주민번호를 생년월일로 변환
	function formatResidentNumber(residentNumber) {
		
		// 00~39년생은 20을 붙이고 그 외엔 19를 붙인다
	    let year = "";
	    if(Number(residentNumber.substr(0,1)) <= 3){
	    	year += "20";
	    } else {
	    	year += "19";
	    }
	    year += residentNumber.substr(0,2);
	    
	    
	    let month = residentNumber.substr(2,2);
	    let day = residentNumber.substr(4,2);
	    
	    let birthDay = year + "-" + month + "-" + day;
	    return birthDay;
	}
	
	// 주민번호로 만나이 계산
	function getAge(paBirthDay) {
		
		// 현재날짜, 생일로 날짜계산
	    const currentDate = new Date();
	    const birthdateDate = new Date(paBirthDay);
	    let age = currentDate.getFullYear() - birthdateDate.getFullYear();

	    // 현재와 생일의 월, 날짜 얻어주기
    	const currentMonth = currentDate.getMonth();
    	const birthdateMonth = birthdateDate.getMonth();
    	const currentDay = currentDate.getDate();
    	const birthdateDay = birthdateDate.getDate();

    	// 현재 날짜가 생년월일보다 앞 날짜면 아직 생일이 오지 않은 상태임(한살빼기)
    	if (currentMonth <= birthdateMonth && currentDay < birthdateDay) {
       		age--;
    	}

	    return age;
	}
	
	// 초기에 환자 상세를 숨김
    $("#patient-detail").hide();
    $("#doctor-opinion").hide();

    //입,퇴원 환자 클릭 시
    function handleListTableClick(element, tableName) {
        if (!element.hasClass("selected")) {
            var paNo = element.data("pano");
            console.log("paNo : ", paNo); 
            var clinicNo = element.data("clinicNo")
         	// 선택된 행에만 클래스를 추가
            $(`${tableName} tr.selected`).removeClass("selected");
            element.addClass("selected");

            $("#patient-detail").show();
            $("#doctor-opinion").show();
            // 이후 해당 환자에 대한 정보를 가져와서 보여줄 수 있음
            if (tableName === "#admiss-list-table") {
                console.log("입원대기 명단 클릭");
            } else if (tableName === "#discharge-list-table") {
                console.log("퇴원대기 명단 클릭");
            }
            getPatientDetail(paNo);
            getClinicOpinion(clinicNo);
        }
    }

    $("#admiss-list-table").on("click", "tr", function() {
        handleListTableClick($(this), "#admiss-list-table");
    });

    $("#discharge-list-table").on("click", "tr", function() {
        handleListTableClick($(this), "#discharge-list-table");
    });
    
    var buttons = document.querySelectorAll('.room-tab');

    buttons.forEach(button => {
        button.addEventListener('click', function() {
            // 모든 버튼에서 selected 클래스 제거
            buttons.forEach(btn => btn.classList.remove('selected'));

            // 클릭된 버튼에만 selected 클래스 추가
            this.classList.add('selected');
        });
    });
    
    // 입,퇴원 대기 환자 상세 정보 출력
    function getPatientDetail(paNo){
        $.ajax({
            url: '/ams/getPatientDetail',
            data: {'paNo' : paNo},
            type: 'post',
            beforeSend:function(xhr){
                xhr.setRequestHeader(header,token);
            },
            success: function(result){
                console.log("클릭한 환자 상세정보 ", result);
                $('#patient-detail').html("");
                    // 보험적용 여부 : 'ISYN01'(급여)면 O, 아니면 X
                var paInsrYnValue = result[0].paInsrYn === 'ISYN01' ? 'O' : 'X';
                var paAge = parseInt(getAge(result[0].paReg));
                console.log("나이 : ", paAge)
                if(result.length > 0){
		            var str = `
		               	<h3 class="m-8">
		                   	<div id="selectedName">\${result[0].paName}</div>
		                </h3>
		                <div>
		                   	<div class="spa-betw p-8" style="padding-bottom: 4px;"> 
		                       	<div class="gray-text d-flex w-30">성별</div> <div class="w-70 f-end paSex">\${result[0].paSex}</div>
		                    </div>
		                    <div class="spa-betw p-8" >
		                        <div class="gray-text d-flex w-30">나이</div> <div class="w-70 f-end paAge">\${paAge}</div>
		                    </div>
		                    <hr class="m-8"/>
		                    <div class="spa-betw p-8" style="padding-bottom: 4px;">
	                            <div class="gray-text d-flex w-30">건강보험</div> <div class="w-70 f-end painsrYn">\${paInsrYnValue}</div>
	                        </div>
	                        <div class="spa-betw p-8">
	                            <div class="gray-text d-flex w-30">연락처</div> <div class="w-70 f-end paPh">\${result[0].paPh}</div>
	                        </div>
	                        <hr class="m-8"/>
	                        <div class="spa-betw p-8" style="padding-bottom: 4px;">
	                            <div class="gray-text d-flex w-30">주소</div> <div class="w-70 f-end paAdd1">\${result[0].paAdd1}</div>
	                        </div>
	                        <div class="spa-betw p-8" style="padding-bottom: 4px;">
                            	<div class="gray-text d-flex w-30"></div> <div class="w-70 f-end paAdd2">\${result[0].paAdd2}</div>
                        	</div>
	                    </div>
	                `;
                	$('#patient-detail').append(str);
            	}             
            },
            error: function(xhr, status, error){
                console.log('Error:', xhr, status, error);
                console.log("에러",paNo);
            }
        });
    }
    
    //의사 소견 가져오기
    function getClinicOpinion(clinicNo){
    	$.ajax({
			url:'/ams/getClinicOpinion',
			dataType: 'json',
			type: 'post',
			data: {"clinicNo": clinicNo},
			beforeSend:function(xhr){
				xhr.setRequestHeader(header,token);
			},
			success: function(rst){
				console.log(rst);
				
				$('.doctor-opinion').html("");
				
			},
			error: function(xhr, status, error){
				console.log('Error:', xhr, status, error);
			}
		});
    }
		
    
 	// 모달 요소 가져오기
    var modal = document.getElementById('myModal');

    // 모달 열기
    function openModal() {
      modal.style.display = 'block';
    }

    // 모달 닫기
    function closeModal() {
      modal.style.display = 'none';
    }

    // 침상목록을 클릭하면 모달 열기
    var bedInfo = document.querySelector('.admiss-room-info');
    bedInfo.addEventListener('click', openModal);

    // 모달 닫기 버튼 클릭 시 모달 닫기
    var closeBtn = document.querySelector('.close');
    closeBtn.addEventListener('click', closeModal);
	
});
</script>
<html>
<body>
<div class="dduk-body-border admission-detail"  style="position: relative; width: 732px;" >
	<div class="dduk-title-area">
		<div class="d-flex align-items-center">
			<h2  id="admissName">대기 환자 목록</h2>
			<span id="admissInfo" class="gray-text mar-b-8 mar-l-8"></span>
		</div>
		<div class="d-flex">
			<input type="text" id="search" class="search dduck-input" placeholder="환자 이름/번호를 입력해 주세요" autocomplete="off">
		</div>
	</div>
	<div class="d-flex">
		<div class="dduk-history" style="width: 412px;">
			<div style="height: 760px;">
				<div class="subTitle-margin" style="border-bottom: 1px solid #EBEFF0; overflow-y: auto;">
					<h2>입원 대기</h2>
					<div class="dduk-x-pd8" style="overflow-y: auto;">
						<table class="admiss-list-table" id="admiss-list-table">
							<tr class="tr-padding">
								<th class="td-padding gray-text" style="width: 40px;">No</th>
								<th class="td-padding gray-text" style="width: 80px;">환자번호</th>
								<th class="td-padding gray-text admissName" style="width: 120px;">이름</th>
								<th class="td-padding gray-text" style="width: 100px;">생년월일</th>
							</tr>
						</table>
					</div>
				</div>
				<div class="subTitle-margin" style="overflow-y: auto;">
					<h2>퇴원 대기</h2>
					<div class="dduk-x-pd8" style="overflow: auto;">
						<table class="discharge-list-table" id="discharge-list-table">
							<tr class="tr-padding">
								<th class="td-padding gray-text" style="width: 40px;">No</th>
								<th class="td-padding gray-text" style="width: 80px;">환자번호</th>
								<th class="td-padding gray-text dischargeName" style="width: 120px;">이름</th>
								<th class="td-padding gray-text" style="width: 100px;">생년월일</th>
							</tr>
						</table>
					</div>
				</div>
			</div>
		</div>
		<div class="patient-record">
			<div class="subTitle-margin">
				<h3>환자 상세</h3>
				<div class="gap-ver-16">
					<div id="patient-detail" 
						class="dduk-inner-border record-content-fr" style="width:288px; height: 320px">
					</div>
					<div id="doctor-opinion" 
						class="dduk-inner-border record-content-fr" style="width:288px; height: 360px">
						<h3 class="m-8">의사 소견</h3>
						<textarea class="dduck-input reason-box" readonly="readonly" style="width:255px; height: 285px"></textarea>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>
<div class="dduk-body-border admission-room-detail"  style="position: relative;">
	<div class="dduk-title-area spa-betw">
		<div class="d-flex align-items-center">
			<h2 id="admissRoomName">병상 현황</h2>
			<span id="paInfo" class="gray-text mar-b-8 mar-l-8"></span>
		</div>
		<div class="d-flex">
			<div class="d-flex patient-info" style="margin-left:-5%; margin-right:5%; width: 230px;	height: 48px;">
				<div class="d-flex">
					<button class="room-tab" id="twinRoom">2인실</button>
				</div>
				<div class="d-flex">
					<button class="room-tab" id="familyRoom">4인실</button>
				</div>
				<div class="d-flex">
					<button class="room-tab" id="suiteRoom">6인실</button>
				</div>
			</div>
		</div>
	</div>
	<div id="myModal" class="modal">
  		<div class="modal-content">
    		<span class="close">&times;</span>
    		<p>모달 내용이 여기에 들어갑니다.</p>
  		</div>
	</div>
	<div class="subTitle-margin">
  	<h2>304호</h2>
 		<div class="d-flex admiss-room-info" style="padding: 16px 24px 16px 16px;">
		<h2>304-1</h2>
	    	<svg xmlns="http://www.w3.org/2000/svg" width="80" height="80" viewBox="0 0 80 80" fill="none" style="margin-left: auto;">
	      		<g clip-path=".url(#clip0_464_1878)">
	        		<path d="M23.3335 43.3337C28.8668 43.3337 33.3335 38.867 33.3335 33.3337C33.3335 27.8003 28.8668 23.3337 23.3335 23.3337C17.8002 23.3337 13.3335 27.8003 13.3335 33.3337C13.3335 38.867 17.8002 43.3337 23.3335 43.3337ZM63.3335 23.3337H43.3335C39.6668 23.3337 36.6668 26.3337 36.6668 30.0003V46.667H10.0002V20.0003C10.0002 18.167 8.50016 16.667 6.66683 16.667C4.8335 16.667 3.3335 18.167 3.3335 20.0003V63.3337C3.3335 65.167 4.8335 66.667 6.66683 66.667C8.50016 66.667 10.0002 65.167 10.0002 63.3337V56.667H70.0002V63.3337C70.0002 65.167 71.5002 66.667 73.3335 66.667C75.1668 66.667 76.6668 65.167 76.6668 63.3337V36.667C76.6668 29.3003 70.7002 23.3337 63.3335 23.3337Z" fill="#8D9EA5"/>
	      		</g>
	      		<defs>
	        		<clipPath id="clip0_464_1878">
	          			<rect width="80" height="80" fill="white"/>
	        		</clipPath>
	      		</defs>
	    	</svg>
  		</div>
	</div>
</div>
</body>
</html>